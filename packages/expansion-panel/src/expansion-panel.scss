@use '@c2n/sass/css-variable';
@use '@c2n/sass/animation';
$prefix: c2-expansion-panel;
$icon-width: 24px;
$icon-height: 24px;

$border-top: 1px solid rgb(213, 213, 213);
$border-right: 0px;
$border-bottom: 1px solid rgb(213, 213, 213);
$border-left: 0px;

$border-radius: 0px;

$padding-top: 16px;
$padding-right: 16px;
$padding-bottom: 16px;
$padding-left: 16px;

$box-shadow: none;

$title-icon-gap: 16px;

$hover-title-bg-color: rgb(230, 230, 230);
$title-bg-color: transparent;

$icon-rotate: 180deg;

$animation-transform-duration: 150ms;

$theme: (
  icon-width: $icon-width,
  icon-height: $icon-height,

  border-top: $border-top,
  border-right: $border-right,
  border-bottom: $border-bottom,
  border-left: $border-left,

  border-radius: $border-radius,

  padding-top: $padding-top,
  padding-right: $padding-right,
  padding-bottom: $padding-bottom,
  padding-left: $padding-left,
  box-shadow: $box-shadow,

  title-icon-gap: $title-icon-gap,
  hover-title-bg-color: $hover-title-bg-color,
  title-bg-color: $title-bg-color,
  icon-rotate: $icon-rotate,
  animation-transform-duration: $animation-transform-duration
);

:host {
  display: flex;
}

:host([header-clickable]) {
  .c2-expansion-panel {
    summary {
      .c2-expansion-panel-title {
        cursor: pointer;
        transition: animation.acceleration(background-color, css-variable.cssVar(animation-transform-duration, $theme, $prefix));
        &:hover {
          background-color: css-variable.cssVar(hover-title-bg-color, $theme, $prefix);
        }
      }
    }
  }
}

.c2-expansion-panel {
  flex: 1;
  align-self: stretch;
  display: flex;
  box-shadow: css-variable.cssVar(box-shadow, $theme, $prefix);
  border-radius: css-variable.cssVar(border-radius, $theme, $prefix);
  summary {
    list-style: none;
    display: flex;
    flex-direction: column;
    border-top: css-variable.cssVar(border-top, $theme, $prefix);
    border-right: css-variable.cssVar(border-right, $theme, $prefix);
    border-bottom: css-variable.cssVar(border-bottom, $theme, $prefix);
    border-left: css-variable.cssVar(border-left, $theme, $prefix);

    transition: animation.sharp(border-radius, css-variable.cssVar(animation-transform-duration, $theme, $prefix));

    border-radius: css-variable.cssVar(border-radius, $theme, $prefix);

    slot[name='icon'] {
      cursor: pointer;

      &::slotted(svg) {
        width: css-variable.cssVar(icon-width, $theme, $prefix);
        height: css-variable.cssVar(icon-height, $theme, $prefix);
        transform: rotate(0deg);
        transition: animation.sharp(transform, css-variable.cssVar(animation-transform-duration, $theme, $prefix));
      }
    }

    slot[name='expanded-icon'] {
      display: none;
      cursor: pointer;

      &::slotted(svg) {
        width: css-variable.cssVar(icon-width, $theme, $prefix);
        height: css-variable.cssVar(icon-height, $theme, $prefix);
      }
    }

    .default-icon {
      width: css-variable.cssVar(icon-width, $theme, $prefix);
      height: css-variable.cssVar(icon-height, $theme, $prefix);
      transform: rotate(0deg);
      transition: animation.sharp(transform, css-variable.cssVar(animation-transform-duration, $theme, $prefix));
    }

    .c2-expansion-panel-title {
      border-radius: inherit;
      display: flex;
      align-items: center;
      justify-content: space-between;
      gap: css-variable.cssVar(title-icon-gap, $theme, $prefix);
      background-color: css-variable.cssVar(title-bg-color, $theme, $prefix);      
      padding-top: css-variable.cssVar(padding-top, $theme, $prefix);
      padding-right: css-variable.cssVar(padding-right, $theme, $prefix);
      padding-bottom: css-variable.cssVar(padding-bottom, $theme, $prefix);
      padding-left: css-variable.cssVar(padding-left, $theme, $prefix);
      position: relative;
    }
  }

  .c2-expansion-panel-content {
    border-right: css-variable.cssVar(border-right, $theme, $prefix);
    border-left: css-variable.cssVar(border-left, $theme, $prefix);

    padding-top: css-variable.cssVar(padding-top, $theme, $prefix);
    padding-right: css-variable.cssVar(padding-right, $theme, $prefix);
    padding-bottom: css-variable.cssVar(padding-bottom, $theme, $prefix);
    padding-left: css-variable.cssVar(padding-left, $theme, $prefix);
    position: relative;
  }

  &[open] {
    summary {
      border-bottom: none;
      border-bottom-right-radius: 0px;
      border-bottom-left-radius: 0px;

      slot[name='expanded-icon'][data-filled] {
        display: contents;
      }
      // has expanded icon
      slot[name='expanded-icon'][data-filled] + slot[name='icon'] {
        display: none;
      }
      slot[name='icon'] {
        &::slotted(svg) {
          transform: rotate(css-variable.cssVar(icon-rotate, $theme, $prefix));
        }
      }
      .default-icon {
        transform: rotate(css-variable.cssVar(icon-rotate, $theme, $prefix));
      }
    }
    .c2-expansion-panel-content {
      border-bottom: css-variable.cssVar(border-bottom, $theme, $prefix);
      border-radius: css-variable.cssVar(border-radius, $theme, $prefix);
      border-top-right-radius: 0px;
      border-top-left-radius: 0px;
    }
  }
}
