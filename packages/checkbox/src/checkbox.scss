@use '@c2n/sass/animation';
@use '@c2n/sass/variables';
@use '@c2n/sass/css-variable' as css with (
  $prefix: c2-checkbox,
  $theme: (
    container--height: 18px,
    container--width: 18px,

    container--border-top-left-radius: 4px,
    container--border-top-right-radius: 4px,
    container--border-bottom-left-radius: 4px,
    container--border-bottom-right-radius: 4px,

    container--border-top: 1px solid #bcbcc6,
    container--border-right: 1px solid #bcbcc6,
    container--border-bottom: 1px solid #bcbcc6,
    container--border-left: 1px solid #bcbcc6,

    container__selected--background-color: #476ef9,
    container__selected--border-top: 0px solid transparent,
    container__selected--border-right: 0px solid transparent,
    container__selected--border-bottom: 0px solid transparent,
    container__selected--border-left: 0px solid transparent,

    checkmark--size: 12px,
    checkmark--color: #ffffff,

    mixedmark--size: 12px,
    mixedmark--color: #ffffff,

    uncheckmark--size: 12px,
    uncheckmark--color: #ffffff,

    touchable--size: 48px,

    state-layer--border-top-left-radius: 999px,
    state-layer--border-top-right-radius: 999px,
    state-layer--border-bottom-left-radius: 999px,
    state-layer--border-bottom-right-radius: 999px,

    state-layer--size: 40px,
    state-layer__hover__unselected--color: #bcbcc6,
    state-layer__hover__selected--color: #476ef9,
  )
);

// Selector
$_unselected-selector: '.c2-checkbox-input:not(:checked):not(:indeterminate)';
$_unselected-enabled-selector: '#{$_unselected-selector}:enabled';
$_unselected-disabled-selector: '#{$_unselected-selector}:disabled';

$_selected-selector: '.c2-checkbox-input:checked';
$_selected-enabled-selector: '#{$_selected-selector}:enabled';
$_selected-disabled-selector: '#{$_selected-selector}:disabled';

$_indeterminate-selector: '.c2-checkbox-input:indeterminate';
$_indeterminate-enabled-selector: '#{$_indeterminate-selector}:enabled';
$_indeterminate-disabled-selector: '#{$_indeterminate-selector}:disabled';

:host {
  display: inline-flex;
}

.c2-checkbox {
  display: inline-flex;
  position: relative;
  line-height: 0;
  white-space: nowrap;
  cursor: pointer;
  vertical-align: bottom;
  z-index: 0;
  align-items: center;
  justify-content: center;
  flex-direction: column;
  width: css.cssVar(touchable--size);
  height: css.cssVar(touchable--size);
}

.c2-checkbox-input {
  position: absolute;
  margin: 0;
  padding: 0;
  opacity: 0;
  cursor: inherit;
  width: css.cssVar(touchable--size);
  height: css.cssVar(touchable--size);
}

.c2-checkbox__background {
  display: inline-flex;
  position: absolute;
  align-items: center;
  justify-content: center;
  box-sizing: border-box;
  border-style: solid;
  background-color: transparent;
  pointer-events: none;
  will-change: background-color, border-color;

  transition: animation.standard(background-color), animation.standard(border-color);

  width: css.cssVar(container--width);
  height: css.cssVar(container--height);

  border-top-left-radius: css.cssVar(container--border-top-left-radius);
  border-top-right-radius: css.cssVar(container--border-top-right-radius);
  border-bottom-left-radius: css.cssVar(container--border-bottom-left-radius);
  border-bottom-right-radius: css.cssVar(container--border-bottom-right-radius);
}

::slotted(svg[slot='uncheckmark']) {
  position: absolute;
  width: css.cssVar(uncheckmark--size);
  height: css.cssVar(uncheckmark--size);
  color: css.cssVar(uncheckmark--color);
  transition: animation.standard-deceleration(opacity);
  opacity: 0;
}

::slotted(svg[slot='checkmark']),
.c2-checkbox__checkmark {
  position: absolute;
  width: css.cssVar(checkmark--size);
  height: css.cssVar(checkmark--size);
  color: css.cssVar(checkmark--color);
  transition: animation.standard-deceleration(opacity);
  opacity: 0;
}

::slotted(svg[slot='mixedmark']),
.c2-checkbox__mixedmark {
  position: absolute;
  width: css.cssVar(mixedmark--size);
  height: css.cssVar(mixedmark--size);
  color: css.cssVar(mixedmark--color);
  transform: scaleX(0) rotate(0deg);
  opacity: 0;
  transition: animation.standard-deceleration(opacity), animation.standard-deceleration(transform);
}

.c2-checkbox-state-layer {
  position: absolute;
  width: css.cssVar(state-layer--size);
  height: css.cssVar(state-layer--size);

  border-top-left-radius: css.cssVar(state-layer--border-top-left-radius);
  border-top-right-radius: css.cssVar(state-layer--border-top-right-radius);
  border-bottom-left-radius: css.cssVar(state-layer--border-bottom-left-radius);
  border-bottom-right-radius: css.cssVar(state-layer--border-bottom-right-radius);

  background-color: transparent;
  opacity: 0;
  pointer-events: none;
  will-change: background-color, opacity;
  transition: animation.standard(background-color), animation.standard(opacity);
}

// Enabled
#{$_unselected-enabled-selector} ~ {
  .c2-checkbox__background {
    border-top: css.cssVar(container--border-top);
    border-right: css.cssVar(container--border-right);
    border-bottom: css.cssVar(container--border-bottom);
    border-left: css.cssVar(container--border-left);
    ::slotted(svg[slot='uncheckmark']) {
      opacity: 1;
    }
  }
}

#{$_indeterminate-enabled-selector} ~ {
  .c2-checkbox__background {
    border-top: css.cssVar(container__selected--border-top);
    border-right: css.cssVar(container__selected--border-right);
    border-bottom: css.cssVar(container__selected--border-bottom);
    border-left: css.cssVar(container__selected--border-left);
    background-color: css.cssVar(container__selected--background-color);

    ::slotted(svg[slot='mixedmark']),
    .c2-checkbox__mixedmark {
      opacity: 1;
      transform: scaleX(1) rotate(0deg);
    }
  }
}

#{$_selected-enabled-selector} ~ {
  .c2-checkbox__background {
    border-top: css.cssVar(container__selected--border-top);
    border-right: css.cssVar(container__selected--border-right);
    border-bottom: css.cssVar(container__selected--border-bottom);
    border-left: css.cssVar(container__selected--border-left);
    background-color: css.cssVar(container__selected--background-color);
    ::slotted(svg[slot='checkmark']),
    .c2-checkbox__checkmark {
      opacity: 1;
    }
  }
}

// Disabled
#{$_unselected-disabled-selector} ~ {
  .c2-checkbox__background {
    border-top: css.cssVar(container--border-top);
    border-right: css.cssVar(container--border-right);
    border-left: css.cssVar(container--border-left);
    border-bottom: css.cssVar(container--border-bottom);
    opacity: variables.$disabled-content-opacity;
    ::slotted(svg[slot='uncheckmark']) {
      opacity: 1;
    }
  }
}

#{$_indeterminate-disabled-selector} ~ {
  .c2-checkbox__background {
    border-top: css.cssVar(container__selected--border-top);
    border-right: css.cssVar(container__selected--border-right);
    border-bottom: css.cssVar(container__selected--border-bottom);
    border-left: css.cssVar(container__selected--border-left);
    background-color: css.cssVar(container__selected--background-color);
    opacity: variables.$disabled-content-opacity;
    ::slotted(svg[slot='mixedmark']),
    .c2-checkbox__mixedmark {
      opacity: 1;
      transform: scaleX(1) rotate(0deg);
    }
  }
}

#{$_selected-disabled-selector} ~ {
  .c2-checkbox__background {
    border-top: css.cssVar(container__selected--border-top);
    border-right: css.cssVar(container__selected--border-right);
    border-bottom: css.cssVar(container__selected--border-bottom);
    border-left: css.cssVar(container__selected--border-left);
    background-color: css.cssVar(container__selected--background-color);
    opacity: variables.$disabled-content-opacity;
    ::slotted(svg[slot='checkmark']),
    .c2-checkbox__checkmark {
      opacity: 1;
    }
  }
}

// Hover
#{$_unselected-enabled-selector}:hover ~ {
  .c2-checkbox-state-layer {
    background-color: css.cssVar(state-layer__hover__unselected--color);
    opacity: variables.$state-layer-hover-opacity;
  }
}

#{$_unselected-enabled-selector}:hover ~ {
  .c2-checkbox-state-layer {
    background-color: css.cssVar(state-layer__hover__unselected--color);
    opacity: variables.$state-layer-hover-opacity;
  }
}
#{$_indeterminate-enabled-selector}:hover ~ {
  .c2-checkbox-state-layer {
    background-color: css.cssVar(state-layer__hover__selected--color);
    opacity: variables.$state-layer-hover-opacity;
  }
}

#{$_selected-enabled-selector}:hover ~ {
  .c2-checkbox-state-layer {
    background-color: css.cssVar(state-layer__hover__selected--color);
    opacity: variables.$state-layer-hover-opacity;
  }
}

// Focus
#{$_unselected-enabled-selector}:focus ~ {
  .c2-checkbox-state-layer {
    background-color: css.cssVar(state-layer__hover__unselected--color);
    opacity: variables.$state-layer-focus-opacity;
  }
}
#{$_indeterminate-enabled-selector}:focus ~ {
  .c2-checkbox-state-layer {
    background-color: css.cssVar(state-layer__hover__selected--color);
    opacity: variables.$state-layer-focus-opacity;
  }
}

#{$_selected-enabled-selector}:focus ~ {
  .c2-checkbox-state-layer {
    background-color: css.cssVar(state-layer__hover__selected--color);
    opacity: variables.$state-layer-focus-opacity;
  }
}

// Pressed

// Error
