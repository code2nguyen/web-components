@use '@c2n/sass/animation';
@use '@c2n/sass/variables';
@use '@c2n/sass/css-variable' as css with (
  $prefix: c2-checkbox,
  $theme: (
    container-height: 18px,
    container-width: 18px,

    container-border-radius: 4px,
    container-border-width: 1px,
    container-border-color: #bcbcc6,
    container-enabled-selected-color: #476ef9,

    checkmark-size: 14px,
    checkmark-color: #fff,

    mixedmark-size: 14px,
    mixedmark-color: #fff,

    uncheckmark-size: 14px,
    uncheckmark-color: #fff,

    touch-target-size: 48px,
    state-layer-border-radius: 9999px,
    state-layer-size: 40px,
    state-layer-hover-unselected-color: #bcbcc6,
    state-layer-hover-selected-color: #476ef9,
  )
);

// Selector
$_unselected-selector: '.c2-checkbox-input:not(:checked):not(:indeterminate)';
$_unselected-enabled-selector: '#{$_unselected-selector}:enabled';
$_unselected-disabled-selector: '#{$_unselected-selector}:disabled';

$_selected-selector: '.c2-checkbox-input:checked';
$_selected-enabled-selector: '#{$_selected-selector}:enabled';
$_selected-disabled-selector: '#{$_selected-selector}:disabled';

$_indeterminate-selector: '.c2-checkbox-input:indeterminate';
$_indeterminate-enabled-selector: '#{$_indeterminate-selector}:enabled';
$_indeterminate-disabled-selector: '#{$_indeterminate-selector}:disabled';

:host {
  display: inline-flex;
}

.c2-checkbox {
  display: inline-flex;
  position: relative;
  line-height: 0;
  white-space: nowrap;
  cursor: pointer;
  vertical-align: bottom;
  z-index: 0;
  align-items: center;
  justify-content: center;
  flex-direction: column;
  width: css.cssVar(touch-target-size);
  height: css.cssVar(touch-target-size);
}

.c2-checkbox-input {
  position: absolute;
  margin: 0;
  padding: 0;
  opacity: 0;
  cursor: inherit;
  width: css.cssVar(touch-target-size);
  height: css.cssVar(touch-target-size);
}

.c2-checkbox__background {
  display: inline-flex;
  position: absolute;
  align-items: center;
  justify-content: center;
  box-sizing: border-box;
  border-style: solid;
  background-color: transparent;
  pointer-events: none;
  will-change: background-color, border-color;

  transition: animation.standard(background-color), animation.standard(border-color);
  width: css.cssVar(container-width);
  height: css.cssVar(container-height);
  border-radius: css.cssVar(container-border-radius);
}

::slotted(svg[slot='uncheckmark']) {
  position: absolute;
  width: css.cssVar(uncheckmark-size);
  height: css.cssVar(uncheckmark-size);
  color: css.cssVar(uncheckmark-color);
  transition: animation.standard-deceleration(opacity);
  opacity: 0;
}

::slotted(svg[slot='checkmark']),
.c2-checkbox__checkmark {
  position: absolute;
  width: css.cssVar(checkmark-size);
  height: css.cssVar(checkmark-size);
  color: css.cssVar(checkmark-color);
  transition: animation.standard-deceleration(opacity);
  opacity: 0;
}

::slotted(svg[slot='mixedmark']),
.c2-checkbox__mixedmark {
  position: absolute;
  width: css.cssVar(mixedmark-size);
  height: css.cssVar(mixedmark-size);
  color: css.cssVar(mixedmark-color);
  transform: scaleX(0) rotate(0deg);
  opacity: 0;
  transition: animation.standard-deceleration(opacity), animation.standard-deceleration(transform);
}

.c2-checkbox-state-layer {
  position: absolute;
  width: css.cssVar(state-layer-size);
  height: css.cssVar(state-layer-size);
  border-radius: css.cssVar(state-layer-border-radius);
  background-color: transparent;
  opacity: 0;
  pointer-events: none;
  will-change: background-color, opacity;
  transition: animation.standard(background-color), animation.standard(opacity);
}

// Enabled
#{$_unselected-enabled-selector} ~ {
  .c2-checkbox__background {
    border-width: css.cssVar(container-border-width);
    border-color: css.cssVar(container-border-color);
    ::slotted(svg[slot='uncheckmark']) {
      opacity: 1;
    }
  }
}

#{$_indeterminate-enabled-selector} ~ {
  .c2-checkbox__background {
    border-width: 0;
    background-color: css.cssVar(container-enabled-selected-color);
    ::slotted(svg[slot='mixedmark']),
    .c2-checkbox__mixedmark {
      opacity: 1;
      transform: scaleX(1) rotate(0deg);
    }
  }
}

#{$_selected-enabled-selector} ~ {
  .c2-checkbox__background {
    border-width: 0;
    background-color: css.cssVar(container-enabled-selected-color);
    ::slotted(svg[slot='checkmark']),
    .c2-checkbox__checkmark {
      opacity: 1;
    }
  }
}

// Disabled
#{$_unselected-disabled-selector} ~ {
  .c2-checkbox__background {
    border-width: css.cssVar(container-border-width);
    border-color: css.cssVar(container-border-color);
    opacity: variables.$disabled-content-opacity;
    ::slotted(svg[slot='uncheckmark']) {
      opacity: 1;
    }
  }
}

#{$_indeterminate-disabled-selector} ~ {
  .c2-checkbox__background {
    border-width: 0;
    background-color: css.cssVar(container-enabled-selected-color);
    opacity: variables.$disabled-content-opacity;
    ::slotted(svg[slot='mixedmark']),
    .c2-checkbox__mixedmark {
      opacity: 1;
    }
  }
}

#{$_selected-disabled-selector} ~ {
  .c2-checkbox__background {
    border-width: 0;
    background-color: css.cssVar(container-enabled-selected-color);
    opacity: variables.$disabled-content-opacity;
    ::slotted(svg[slot='checkmark']),
    .c2-checkbox__checkmark {
      opacity: 1;
    }
  }
}

// Hover
#{$_unselected-enabled-selector}:hover ~ {
  .c2-checkbox-state-layer {
    background-color: css.cssVar(state-layer-hover-unselected-color);
    opacity: variables.$state-layer-hover-opacity;
  }
}

#{$_unselected-enabled-selector}:hover ~ {
  .c2-checkbox-state-layer {
    background-color: css.cssVar(state-layer-hover-unselected-color);
    opacity: variables.$state-layer-hover-opacity;
  }
}
#{$_indeterminate-enabled-selector}:hover ~ {
  .c2-checkbox-state-layer {
    background-color: css.cssVar(state-layer-hover-selected-color);
    opacity: variables.$state-layer-hover-opacity;
  }
}

#{$_selected-enabled-selector}:hover ~ {
  .c2-checkbox-state-layer {
    background-color: css.cssVar(state-layer-hover-selected-color);
    opacity: variables.$state-layer-hover-opacity;
  }
}

// Focus
#{$_unselected-enabled-selector}:focus ~ {
  .c2-checkbox-state-layer {
    background-color: css.cssVar(state-layer-hover-unselected-color);
    opacity: variables.$state-layer-focus-opacity;
  }
}
#{$_indeterminate-enabled-selector}:focus ~ {
  .c2-checkbox-state-layer {
    background-color: css.cssVar(state-layer-hover-selected-color);
    opacity: variables.$state-layer-focus-opacity;
  }
}

#{$_selected-enabled-selector}:focus ~ {
  .c2-checkbox-state-layer {
    background-color: css.cssVar(state-layer-hover-selected-color);
    opacity: variables.$state-layer-focus-opacity;
  }
}

// Pressed

// Error
