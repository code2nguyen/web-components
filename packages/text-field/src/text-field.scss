@use '@c2n/sass/animation';
@use '@c2n/sass/variables';
@use '@c2n/sass/css-variable' as css with (
  $prefix: c2-text-field,
  $theme: (
    border-top-left-radius: 4px,
    border-top-right-radius: 4px,
    border-bottom-left-radius: 4px,
    border-bottom-right-radius: 4px,

    color: inherit,
    padding-top: 8px,
    padding-right: 8px,
    padding-bottom: 8px,
    padding-left: 8px,
    background: field,

    font-size: 14px,
    font-weight: null,
    font-style: normal,
    font-family: null,

    placeholder--opacity: 0.5,
    placeholder--font-weight: null,
    placeholder--font-style: null,
    placeholder--color: null,

    border-top: 1px solid variables.$color-border,
    border-bottom: 1px solid variables.$color-border,
    border-right: 1px solid variables.$color-border,
    border-left: 1px solid variables.$color-border,

    focus--border-top: 1px solid variables.$color-blue,
    focus--border-bottom: 1px solid variables.$color-blue,
    focus--border-right: 1px solid variables.$color-blue,
    focus--border-left: 1px solid variables.$color-blue,
    focus--color: inherit,
    focus--background: field,

    error--border-top: 1px solid variables.$color-red,
    error--border-bottom: 1px solid variables.$color-red,
    error--border-right: 1px solid variables.$color-red,
    error--border-left: 1px solid variables.$color-red,
    error--background: field,
    error--color: variables.$color-red,

    disabled--border-top: 1px solid variables.$color-border-light,
    disabled--border-bottom: 1px solid variables.$color-border-light,
    disabled--border-right: 1px solid variables.$color-border-light,
    disabled--border-left: 1px solid variables.$color-border-light,
    disabled--background: field,
    disabled--color: inherit,

    read-only--border-top: unset,
    read-only--border-bottom: unset,
    read-only--border-right: unset,
    read-only--border-left: unset,
    read-only--background: transparent,
    read-only--color: inherit,
  )
);

:host {
  display: inline-grid;
  grid-template-columns: 1fr min-content;
  grid-template-rows: fit-content, fit-content;
  gap: 0px;
}

.c2-text-field {
  display: inline-flex;
  align-items: center;
  text-align: inherit;
  box-sizing: border-box;
  flex: 1;
  cursor: text;
  border-top: css.cssVar(border-top);
  border-bottom: css.cssVar(border-bottom);
  border-right: css.cssVar(border-right);
  border-left: css.cssVar(border-left);
  border-top-left-radius: css.cssVar(border-top-left-radius);
  border-top-right-radius: css.cssVar(border-top-right-radius);
  border-bottom-left-radius: css.cssVar(border-bottom-left-radius);
  border-bottom-right-radius: css.cssVar(border-bottom-right-radius);

  color: css.cssVar(color);
  background: css.cssVar(background);
  position: relative;
  will-change: border;
  box-sizing: border-box;
  transition: animation.standard(border);
  gap: 4px;
  align-self: stretch;
  justify-self: stretch;
  .input {
    font-size: css.cssVar(font-size);
    font-weight: css.cssVar(font-weight);
    font-style: css.cssVar(font-style);
    font-family: css.cssVar(font-family);

    z-index: 0;
    width: 100%;
    flex: 1;
    border: none;
    outline: none;
    caret-color: inherit;
    overflow-x: hidden;
    text-align: inherit;
    border-radius: inherit;
    color: inherit;
    background: transparent;
    padding-top: css.cssVar(padding-top);
    padding-bottom: css.cssVar(padding-bottom);
    padding-right: css.cssVar(padding-right);
    padding-left: css.cssVar(padding-left);

    &::placeholder {
      font-weight: css.cssVar(placeholder--font-weight);
      font-style: css.cssVar(placeholder--font-style);
      color: css.cssVar(placeholder--color);
      opacity: css.cssVar(placeholder--opacity);
    }

    @media (forced-colors: active) {
      background: Field; // Remove white background in Firefox HCM
    }
  }
  // Focus
  &.focus-within {
    border-top: css.cssVar(focus--border-top, border-top);
    border-bottom: css.cssVar(focus--border-bottom, border-bottom);
    border-right: css.cssVar(focus--border-right, border-right);
    border-left: css.cssVar(focus--border-left, border-left);
    color: css.cssVar(focus--color, color);
    background: css.cssVar(focus--background);

    .prefix-icon,
    .suffix-icon {
      opacity: 1;
    }
  }

  &.error {
    border-top: css.cssVar(error--border-top);
    border-bottom: css.cssVar(error--border-bottom);
    border-right: css.cssVar(error--border-right);
    border-left: css.cssVar(error--border-left);
    color: css.cssVar(error--color, color);
    background: css.cssVar(error--background);
  }

  &.disabled {
    cursor: default;
    border-top: css.cssVar(disabled--border-top, border-top);
    border-bottom: css.cssVar(disabled--border-bottom, border-bottom);
    border-right: css.cssVar(disabled--border-right, border-right);
    border-left: css.cssVar(disabled--border-left, border-left);
    color: css.cssVar(disabled--color, color);
    background: css.cssVar(disabled--background, background);
    opacity: variables.$disabled-content-opacity;
    pointer-events: none;
  }

  &.read-only {
    border-top: css.cssVar(read-only--border-top);
    border-bottom: css.cssVar(read-only--border-bottom);
    border-right: css.cssVar(read-only--border-right);
    border-left: css.cssVar(read-only--border-left);
    color: css.cssVar(read-only--color, color);
    background: css.cssVar(read-only--background);
  }
  .prefix-icon,
  .suffix-icon {
    z-index: 1;
    display: flex;
    gap: 4px;
    align-items: center;
    opacity: 0.5;
  }
}
.help-icon {
  align-self: center;
}
