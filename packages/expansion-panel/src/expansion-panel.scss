@use '@c2n/sass/animation';
@use '@c2n/sass/variables';
@use '@c2n/sass/css-variable' as css with (
  $prefix: c2-expansion-panel,
  $theme: (
    border-top: 1px solid variables.$color-border-light,
    border-bottom: 1px solid variables.$color-border-light,
    border-right: 1px solid variables.$color-border-light,
    border-left: 1px solid variables.$color-border-light,

    border-top-left-radius: 0px,
    border-top-right-radius: 0px,
    border-bottom-left-radius: 0px,
    border-bottom-right-radius: 0px,

    box-shadow: null,
    header--gap: 16px,
    header--padding-top: 16px,
    header--padding-right: 16px,
    header--padding-bottom: 16px,
    header--padding-left: 16px,

    header__title--background: null,
    header__title--gap: 16px,
    header__title--flex-direction: row,
    header__title--border-bottom: null,

    header__title__icon--width: 24px,
    header__title__icon--height: 24px,
    header__title__icon--rotate: 180deg,    
    header__title__icon--color: null,
    header__title__hover--background: variables.$color-bg-dark,

    content--padding-top: 0px,
    content--padding-right: null,
    content--padding-bottom: null,
    content--padding-left: null,
  )
);

:host {
  display: flex;

  .c2-expansion-panel {
    flex: 1;
    align-self: stretch;
    display: flex;
    position: relative;
    flex-direction: column;
    box-shadow: css.cssVar(box-shadow);
    border-top-left-radius: css.cssVar(border-top-left-radius);
    border-top-right-radius: css.cssVar(border-top-right-radius);
    border-bottom-left-radius: css.cssVar(border-bottom-left-radius);
    border-bottom-right-radius: css.cssVar(border-bottom-right-radius);  

    .c2-expansion-panel-header {
      display: flex;
      flex-direction: column;
      will-change: border-radius;
      transition: animation.standard-acceleration(border-radius, 50ms);

      border-top: css.cssVar(border-top);
      border-bottom: css.cssVar(border-bottom);
      border-right: css.cssVar(border-right);
      border-left: css.cssVar(border-left);

      border-top-left-radius: css.cssVar(border-top-left-radius);
      border-top-right-radius: css.cssVar(border-top-right-radius);
      border-bottom-left-radius: css.cssVar(border-bottom-left-radius);
      border-bottom-right-radius: css.cssVar(border-bottom-right-radius);
      gap: css.cssVar(header--gap);

      .c2-expansion-panel-header-title {
        border-radius: inherit;        
        display: flex;
        align-items: center;
        position: relative;
        cursor: pointer;
        transition: animation.standard(background);

        padding-top: css.cssVar(header--padding-top);
        padding-right: css.cssVar(header--padding-right);
        padding-bottom: css.cssVar(header--padding-bottom);
        padding-left: css.cssVar(header--padding-left);

        background: css.cssVar(header__title--background);
        gap: css.cssVar(header__title--gap);
        flex-direction: css.cssVar(header__title--flex-direction);

        slot[name='icon'] {
          cursor: pointer;
          color: css.cssVar(header__title__icon--color);
          &::slotted(svg) {
            transform: rotate(0deg);
            will-change: transform;
            transition: animation.standard(transform);
            width: css.cssVar(header__title__icon--width);
            height: css.cssVar(header__title__icon--height);            
          }
        }
  
        slot[name='expanded-icon'] {
          display: none;
          cursor: pointer;
          color: css.cssVar(header__title__icon--color);
          &::slotted(svg) {
            width: css.cssVar(header__title__icon--width);
            height: css.cssVar(header__title__icon--height);
          }
        }
  
        .default-icon {
          transform: rotate(0deg);
          will-change: transform;
          transition: animation.standard(transform);  
          width: css.cssVar(header__title__icon--width);
          height: css.cssVar(header__title__icon--height);
        }

        &:hover {
          background: css.cssVar(header__title__hover--background);
        }
        .c2-expansion-panel-header-title-content {
          flex: 1;
          display: flex;
          align-items: center;
        }
      }

      .c2-expansion-panel-header-title:has(+ .c2-expansion-panel-header-content[data-filled]) {
        border-bottom-left-radius: 0px;
        border-bottom-right-radius: 0px;
        padding-bottom: 0;
        border-bottom: css.cssVar(header__title--border-bottom);
      }

      .c2-expansion-panel-header-content {
        display: none;
        padding-right: css.cssVar(header--padding-right);
        padding-left: css.cssVar(header--padding-left);
        padding-bottom: css.cssVar(header--padding-bottom);
        border-bottom-left-radius: css.cssVar(border-bottom-left-radius);
        border-bottom-right-radius: css.cssVar(border-bottom-right-radius);
      }
      .c2-expansion-panel-header-content[data-filled] {
        display: block;
      }

     

     
    }

    .c2-expansion-panel-content {
      display: none;
      box-sizing: border-box;
      padding-top: 0px;
      position: relative;
      will-change: height, opacity, display;
      transition: animation.standard(max-height);

      animation-duration: 150ms;
      animation-timing-function: ease;
      text-transform: none;

      overflow: hidden;

      border-right: css.cssVar(border-right);
      border-left: css.cssVar(border-left);

      padding-left: css.cssVar(content--padding-left, header--padding-left);
      padding-right: css.cssVar(content--padding-right, header--padding-right);
      padding-bottom: css.cssVar(content--padding-bottom, header--padding-bottom);
    }
  }
  // .c2-expansion-panel-content__detect-height {
  //   position: absolute;
  //   visibility: hidden;
  //   opacity: 0;
  //   z-index: -1;
  //   padding-right: css.cssVar(padding-right);
  //   padding-left: css.cssVar(padding-left);
  //   padding-top: css.cssVar(padding-top);
  //   padding-bottom: css.cssVar(padding-bottom);
  // }
}

:host([expanded]) {
  .c2-expansion-panel {
    .c2-expansion-panel-header {
      border-bottom: none;
      border-bottom-right-radius: 0px;
      border-bottom-left-radius: 0px;

      .c2-expansion-panel-header-title {
        padding-bottom: css.cssVar(header--padding-top);
      }

      slot[name='expanded-icon'][data-filled] {
        display: contents;
      }
      // has expanded icon
      slot[name='expanded-icon'][data-filled] + slot[name='icon'] {
        display: none;
      }
      slot[name='icon'] {
        &::slotted(svg) {
          transform: rotate(css.cssVar(header__icon--rotate));
        }
      }
      .default-icon {
        transform: rotate(css.cssVar(header__icon--rotate));
      }
    }
    .c2-expansion-panel-content {
      border-bottom: css.cssVar(border-bottom);
      border-radius: css.cssVar(border-radius);
      border-top-right-radius: 0px;
      border-top-left-radius: 0px;
      display: block;
      // height: var(--c2-expansion-panel-content-height, 0px);
      // max-height: var(--c2-expansion-panel-content-height, 0px);
    }
  }
}

:host([title-not-clickable]) {
  .c2-expansion-panel {
    .c2-expansion-panel-header {
      .c2-expansion-panel-header-title {
        &:hover {
          background: inherit;
        }
      }
    }
  }
}
