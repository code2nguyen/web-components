@use 'sass:math';
@use '@c2n/wc-utils/animation';
@use '@c2n/wc-utils/css-variable';

$prefix: c2-reorder-list;

$theme: (
  container-border-width: 0px,
  container-border-color: #bcbcc6,
  container-border-radius: 8px,
  container-padding: 0px,
  container-margin: 0px,
  container-gap: 0px,
  item-background: transparent,
  item-padding: 0px,

  divider-height: 0px,
  divider-color: #bcbcc6,

  placeholder-background: transparent,

  dragging-item-background: transparent,
);

:host {
  position: relative;
}

.c2-reorder-list-container {
  display: flex;
  flex-direction: column;
  position: relative;
  gap: css-variable.cssVar($theme, container-gap, $prefix);
  border-width: css-variable.cssVar($theme, container-border-width, $prefix);
  border-color: css-variable.cssVar($theme, container-border-color, $prefix);
  border-style: solid;
  border-radius: css-variable.cssVar($theme, container-border-radius, $prefix);
  padding: css-variable.cssVar($theme, container-padding, $prefix);
  margin: css-variable.cssVar($theme, container-margin, $prefix);
  .list-item {
    background: css-variable.cssVar($theme, item-background, $prefix);
    padding: css-variable.cssVar($theme, item-padding, $prefix);

    border-radius: initial;
    box-sizing: border-box;
    position: relative;
    &:not(:last-child) {
      border-bottom: css-variable.cssVar($theme, divider-height, $prefix) solid css-variable.cssVar($theme, divider-color, $prefix);
    }
    &:first-child {
      border-top-left-radius: inherit;
      border-top-right-radius: inherit;
    }
    &:last-child {
      border-bottom-left-radius: inherit;
      border-bottom-right-radius: inherit;
    }
  }
  .list-item--reorderable {
    ::slotted(:not([data-fixed])) {
      cursor: pointer;
      touch-action: none;
      -webkit-user-drag: none;
      -webkit-tap-highlight-color: transparent;
      user-select: none;
    }
  }
  .dragging-placeholder {
    background-color: css-variable.cssVar($theme, placeholder-background, $prefix);
    z-index: 1;
  }
}

.dragging-item {
  box-sizing: border-box;
  position: fixed;
  background-color: css-variable.cssVar($theme, dragging-item-background, $prefix);
  cursor: pointer;
  z-index: 100000;
  display: none;
  &.dragging-item--active {
    display: flex;
  }
}
